/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistainegi;

import javax.swing.JOptionPane;
import modelos.InformacionModelo;

/**
 *
 * @author s_SEBAS
 */
public class Informacion extends javax.swing.JFrame {

    private InformacionModelo informacionModelo;
    
    public Informacion() {
        initComponents();
        informacionModelo = new InformacionModelo();
        cargarDatosCensoPob();
    }
    
     private void eliminarFilaSeleccionada() {
    int filaSeleccionada = jTable1.getSelectedRow();

    if (filaSeleccionada != -1) {
        try {
            // Obtener el id del registro a eliminar
            int idEntidad = Integer.parseInt((String) jTable1.getValueAt(filaSeleccionada, 0));
            int idMunicipio = Integer.parseInt((String) jTable1.getValueAt(filaSeleccionada, 1));
            int idLocalidad = Integer.parseInt((String) jTable1.getValueAt(filaSeleccionada, 2));

            // Llamar al método en el modelo para eliminar el registro
            boolean eliminado = informacionModelo.eliminarRegistro(idEntidad, idMunicipio, idLocalidad);

            if (eliminado) {
                // Actualizar la tabla después de la eliminación
                cargarDatosCensoPob();
                JOptionPane.showMessageDialog(this, "Registro eliminado exitosamente.");
            } else {
                JOptionPane.showMessageDialog(this, "Error al eliminar el registro.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error al obtener los datos de la fila seleccionada.");
            e.printStackTrace();
        }
    } else {
        JOptionPane.showMessageDialog(this, "Seleccione una fila para eliminar.");
    }
}

private void cargarDatosCensoPob() {
    try {
        // Llamar al método en el modelo para cargar los datos
        informacionModelo.mostrarCensoPob(jTable1);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "No se puede mostrar la tabla. Error: " + e.getMessage());
        e.printStackTrace();
    }
}




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnCerrar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Información");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(144, 144, 193));
        jPanel2.setPreferredSize(new java.awt.Dimension(548, 70));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vistainegi/ineee.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Yu Gothic", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Información");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vistainegi/mexic.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 18, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idEntidad", "idMunicipio", "idLocalidad", "Nombre", "Población Total", "Población M.", "Población F.", "No. Escuelas", "No. Viviendas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Nuevo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Guardar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 828, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(209, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addGap(11, 11, 11)
                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(202, 202, 202))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCerrar)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        EditarInformación editar = new EditarInformación();
        editar.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
    if (selectedRow != -1) {
        // Obtener los identificadores de la fila seleccionada
        int idEntidad = Integer.parseInt(jTable1.getValueAt(selectedRow, 0).toString());
        int idMunicipio = Integer.parseInt(jTable1.getValueAt(selectedRow, 1).toString());
        int idLocalidad = Integer.parseInt(jTable1.getValueAt(selectedRow, 2).toString());

        // Mostrar cuadro de diálogo de confirmación
        int response = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que deseas eliminar esta localidad?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (response == JOptionPane.YES_OPTION) {
            // Llamar al método para eliminar el registro de la base de datos
            boolean deleted = informacionModelo.eliminarRegistro(idEntidad, idMunicipio, idLocalidad);

            if (deleted) {
                // Actualizar la tabla después de la eliminación
                cargarDatosCensoPob();
                JOptionPane.showMessageDialog(this, "Localidad eliminada exitosamente.");
            } else {
                JOptionPane.showMessageDialog(this, "Error al eliminar la localidad.");
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, selecciona una fila para eliminar.");
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        cargarDatosCensoPob();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
        InformacionModelo informacionModelo = new InformacionModelo();
        int rowCount = jTable1.getRowCount();
        int row= jTable1.getSelectedRow();
        
        
        
        int idEntidad = Integer.parseInt(jTable1.getValueAt(row, 0).toString());
            int idMunicipio = Integer.parseInt(jTable1.getValueAt(row, 1).toString());
            int idLocalidad = Integer.parseInt(jTable1.getValueAt(row, 2).toString());
            String nom_localidad = jTable1.getValueAt(row, 3).toString();
            int pob_total = Integer.parseInt(jTable1.getValueAt(row, 4).toString());
            int poblacion_m = Integer.parseInt(jTable1.getValueAt(row, 5).toString());
            int poblacion_f = Integer.parseInt(jTable1.getValueAt(row, 6).toString());
            int no_escuelas = Integer.parseInt(jTable1.getValueAt(row, 7).toString());
            int no_viviendas = Integer.parseInt(jTable1.getValueAt(row, 8).toString());

            int response = JOptionPane.showConfirmDialog(
                this,
                "¿Estás seguro de que quieres guardar los cambios en la fila con idEntidad: " + idEntidad + ", idMunicipio: " + idMunicipio + ", idLocalidad: " + idLocalidad + "?",
                "Confirmar Guardado",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
            );

            if (response == JOptionPane.YES_OPTION) {
                boolean actualizado = informacionModelo.actualizarRegistro(
                    idEntidad, idMunicipio, idLocalidad, nom_localidad, pob_total,
                    poblacion_m, poblacion_f, no_escuelas, no_viviendas
                );

                if (!actualizado) {
                    JOptionPane.showMessageDialog(this, "Error al actualizar el registro con idEntidad: " + idEntidad + ", idMunicipio: " + idMunicipio + ", idLocalidad: " + idLocalidad);
                }
            } else {
                JOptionPane.showMessageDialog(this, "No se realizaron cambios en la fila con idEntidad: " + idEntidad + ", idMunicipio: " + idMunicipio + ", idLocalidad: " + idLocalidad);
            }
        
        
        
        JOptionPane.showMessageDialog(this, "Proceso completado.");
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Error al obtener los datos de la tabla.");
        e.printStackTrace();
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Informacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Informacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Informacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Informacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Informacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
